import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.util.ArrayList;

public class UserAlice {
	
	private static BigInteger Min = BigInteger.valueOf(1);
	private static BigInteger Max = BigInteger.valueOf(1000000);
	
	public static void GenerateMOs(String aliceIdentity, String blindFactor,
			ArrayList<BigInteger> TextMOs, ArrayList<BigInteger> GeneratedMOs,
			ArrayList<BigInteger> Identity_L_List) {
		for (int i = 0; i < 100; i++)
		{
			MoneyOrder newMO = GenerateTextMO();
			BigInteger newMOInt = new BigInteger(newMO.getData());
			
			BigInteger blindingFactor; //= new BigInteger();
			//Get blinding factor, which has to be a non-zero residue of mod n (from bank's public key)
			int residue = 0;
			while (residue == 0)
			{
				Min + (int)(Math.random() * ((Max - Min) + 1))
			}
			
			//Encrypt the blinding factor using the Bank's public key
			
			//generatedMOs.add(i);
			
			//Add identity strings??
			//identity_L_List.add(i);
		}
	}
	
	private static MoneyOrder GenerateTextMO()
	{
		//Serial number
		ByteBuffer b = ByteBuffer.allocate(10);
		b.putInt(123456789);
		byte[] newSN = b.array();
		
		//Amount
		ByteBuffer b1 = ByteBuffer.allocate(10);
		b1.putInt(100);
		byte[] newAmount = b1.array();
		
		MoneyOrder newMO = new MoneyOrder(newSN, newAmount);
		return newMO;
	}
}
